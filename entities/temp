extends Actor
class_name Player

onready var head = $Head
onready var camera = $Head/Camera
var velocity = Vector3()
var camera_x_rotation = 0
var roll_basis 
var head_basis
var is_dashing = false
var bulletLoad = preload("res://entities/bullet.tscn")

var mouse = Mouse.new(3, self, "move_camera")
var rstick = Stick.new("look_left", "look_right", "look_up", "look_down", 10, self, "move_camera")
var lstick = Stick.new("move_left", "move_right", "move_forward", "move_backward", 1, self, "move_player")

func _ready():
	Master.Player = self
	add_to_group("Player")
	add_child(mouse)
	add_child(rstick)
	add_child(lstick)
	$Anime.play("Walk", -1, 2)

func _process(_delta):
	if Input.is_action_just_pressed("fire"):
		$Head/Camera/Pistol/Anime.seek(0)
		$Head/Camera/Pistol/Anime.play("Fire", -1, 2)
	if Input.is_action_just_pressed("hit"):
		$Head/Camera/Pistol/Anime.seek(0)
		$Head/Camera/Pistol/Anime.play("Hit", -1, 2)
			

func _physics_process(delta):
	if $Anime.is_playing():
		if ($Anime.current_animation == "roll" or $Anime.current_animation == "rollside"):
			is_dashing = true
	else:
		head_basis = head.get_global_transform().basis
		is_dashing = false
	
	var move_z = Input.get_action_strength("move_backward") - Input.get_action_strength("move_forward")
	var move_x = Input.get_action_strength("move_right") - Input.get_action_strength("move_left")
	var direction = Vector3()
	direction += head_basis.z * move_z
	direction += head_basis.x * move_x
	
	if Input.is_action_just_pressed("roll"):
		if $Anime.roll_animation($Head.rotation_degrees, move_z, move_x) != 0:
			roll_basis = head_basis
	$Head/Camera/Pistol/Anime.playback_speed = 1 if abs(velocity.z)>1 or abs(velocity.z)>1 else 0
	
	var dash_boast = 2.4 if is_dashing else 1
	
	velocity = velocity.linear_interpolate(direction * speed * dash_boast, acceleration * delta )
	
	velocity.y -= gravity * delta * 100
	
	if Input.is_action_just_pressed("jump") and is_on_floor():
		velocity.y += jump_power
	
	velocity = move_and_slide(velocity, Vector3.UP)

func move_camera(look, delta):
	look *= delta * 15
	head.rotate_y(deg2rad(-look.x))
	var x_delta = look.y
	if camera_x_rotation + x_delta > -90 and camera_x_rotation + x_delta < 90: 
		camera.rotate_x(deg2rad(-x_delta))
		camera_x_rotation += x_delta
